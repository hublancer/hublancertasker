rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isParticipant(conversation) {
      return request.auth.uid in conversation.data.participants;
    }

    match /users/{userId} {
      allow read;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
    }
    
    match /users/{userId}/transactions/{transactionId} {
      allow read, create: if isOwner(userId);
    }
    
    match /users/{userId}/notifications/{notificationId} {
        allow read, create, update: if isOwner(userId);
    }

    match /tasks/{taskId} {
      allow read: if true;
      allow create: if request.auth != null;
      // Only the owner can update or delete a task
      allow update, delete: if isOwner(resource.data.postedById);

      // Anyone authenticated can create an offer. The offerCount is now handled by a Cloud Function.
      match /offers/{offerId} {
        allow read;
        allow create, delete: if request.auth != null;
        allow update: if request.auth.uid == resource.data.taskerId;
      }

      match /questions/{questionId} {
        allow read, create: if request.auth != null;
        allow update: if isOwner(resource.data.userId) || isOwner(get(/databases/$(database)/documents/tasks/$(taskId)).data.postedById);
      }
    }
    
    match /reviews/{reviewId} {
      allow read;
      allow create: if isOwner(request.resource.data.clientId);
    }

    match /conversations/{conversationId} {
      allow read, update: if isParticipant(resource);
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;

      match /messages/{messageId} {
        // Must be a participant and the sender must be the current user
        allow create: if isParticipant(get(/databases/$(database)/documents/conversations/$(conversationId))) && request.resource.data.senderId == request.auth.uid;
        allow read: if isParticipant(get(/databases/$(database)/documents/conversations/$(conversationId)));
      }
    }
    
    match /settings/platform {
        allow read: if true;
        // In a real app, you would restrict write access to admins.
        allow write: if true; 
    }

    match /platform_transactions/{transactionId} {
      // In a real app, you would restrict read access to admins.
      allow read: if true;
    }
  }
}
