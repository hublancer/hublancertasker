rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write to their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Tasks
    match /tasks/{taskId} {
      // Anyone can read tasks
      allow read: if true;
      // Logged in users can create tasks
      allow create: if request.auth != null;
      // Only the user who created the task can update or delete it
      allow update, delete: if request.auth != null && resource.data.postedById == request.auth.uid;
    }

    // Offers on tasks
    match /tasks/{taskId}/offers/{offerId} {
        // Logged in users can read offers
        allow read: if request.auth != null;
        // Logged in users can create offers
        allow create: if request.auth != null;
        // The offer owner or task owner can update/delete
        allow update, delete: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/tasks/$(taskId)).data.postedById == request.auth.uid);
    }
    
    // Conversations and messages
    match /conversations/{conversationId} {
      // Only participants can read/write to a conversation document
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
          // Only participants can read messages
          allow read: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
          // Only participants can create messages
          allow create: if request.auth != null && request.resource.data.from === request.auth.uid && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
      }
    }
  }
}
