
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USER PROFILES
    match /users/{userId} {
      // Admins can read/write any user profile
      allow read, write: if isAdmin();
      
      // Users can read any profile, but only write to their own
      allow read: if request.auth != null;
      allow update: if isOwner(userId);

      // Users can access their own transactions and notifications
      match /transactions/{transactionId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
      match /notifications/{notificationId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    // TASKS
    match /tasks/{taskId} {
      // Anyone can read a task
      allow read: if request.auth != null;

      // Anyone authenticated can create a task for themselves
      allow create: if isOwner(request.resource.data.postedById);

      // Only the poster can update their task, EXCEPT for offerCount
      allow update: if (isOwner(resource.data.postedById)) ||
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['offerCount']));
      
      // Only the poster or an admin can delete a task
      allow delete: if isOwner(resource.data.postedById) || isAdmin();

      // Anyone can make an offer on a task
      match /offers/{offerId} {
        allow read, write: if request.auth != null;
      }

      // Anyone can ask a question
      match /questions/{questionId} {
        allow read, write: if request.auth != null;
      }
    }

    // REVIEWS
    match /reviews/{reviewId} {
        // Anyone can read reviews
        allow read: if request.auth != null;
        // Only the client who created the task can write a review
        allow write: if isOwner(request.resource.data.clientId);
    }

    // CONVERSATIONS
    match /conversations/{conversationId} {
        // Only participants can read/write
        allow read, write: if request.auth.uid in resource.data.participants || isAdmin();

        match /messages/{messageId} {
            // Only participants can read/write messages
            allow read, write: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants || isAdmin();
        }
    }
    
    // ADMIN-ONLY COLLECTIONS
    match /settings/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /platform_transactions/{transactionId} {
      allow read, write: if isAdmin();
    }
  }
}
