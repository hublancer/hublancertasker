rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can create their own profile, but only read/update their own.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Anyone can read tasks. Logged-in users can create them.
    // Only the owner can update or delete their own task.
    match /tasks/{taskId} {
      allow read: if true;
      allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.uid == resource.data.postedById;

      // Logged-in users can create offers and questions.
      // Anyone can read offers and questions.
      match /offers/{offerId} {
        allow read: if true;
        allow create, update, delete: if request.auth.uid != null;
      }

      match /questions/{questionId} {
        allow read: if true;
        allow create: if request.auth.uid != null;
        allow update: if request.auth.uid == resource.data.userId || request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.postedById;
      }
    }
    
    // Only participants can read or write to a conversation.
    match /conversations/{conversationId} {
        allow read, write: if request.auth.uid in resource.data.participants;
        allow create: if request.auth.uid != null && request.auth.uid in request.resource.data.participants;

        match /messages/{messageId} {
            allow read, create: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
        }
    }
  }
}
