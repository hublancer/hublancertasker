
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user owns a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
    
    // Allow any authenticated user to read tasks
    match /tasks/{taskId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      // Only the owner can update/delete their own task
      allow update, delete: if isAuthenticated() && isOwner(resource.data.postedById);
    }

    // Allow authenticated users to interact with subcollections
    match /tasks/{taskId}/{document=**} {
        allow read, write: if isAuthenticated();
    }
    
    // Allow any authenticated user to manage their data in other collections
    match /{collection}/{docId} {
      allow read, write: if isAuthenticated();
    }
    
    match /{collection}/{docId}/{subcollection}/{subdocId} {
      allow read, write: if isAuthenticated();
    }
  }
}
