
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Settings are public
    match /settings/platform {
      allow read;
    }

    // User profiles can be read by anyone, but only the owner can write.
    match /users/{userId} {
      allow read;
      allow write: if request.auth.uid == userId;
      
      // Transactions can only be accessed by the owner
      match /transactions/{transactionId} {
        allow read, write: if request.auth.uid == userId;
      }

      // Notifications can only be accessed by the owner
      match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // Tasks can be read by anyone authenticated, but only the owner can create/delete.
    match /tasks/{taskId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth.uid == request.resource.data.postedById;
      
      // Offer subcollection can be created by any authenticated user.
      match /offers/{offerId} {
        allow create: if request.auth != null;
        allow read, update, delete: if request.auth.uid == resource.data.taskerId || get(/databases/$(database)/documents/tasks/$(taskId)).data.postedById == request.auth.uid;
      }
      
      // Questions subcollection
      match /questions/{questionId} {
        allow read, create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/tasks/$(taskId)).data.postedById == request.auth.uid;
      }
    }
    
    match /conversations/{conversationId} {
      allow read: if request.auth.uid in resource.data.participants;
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }

    // Reviews can be read by anyone, created only by the client of the task
    match /reviews/{reviewId} {
      allow read;
      allow create: if request.auth.uid == request.resource.data.clientId;
    }
    
    // Platform transactions are admin-only
    match /platform_transactions/{transactionId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
