rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read;
      // User can only update their own doc, and cannot change their role or wallet
      allow update: if request.auth.uid == userId
                    && request.resource.data.role == resource.data.role
                    && request.resource.data.wallet.balance == resource.data.wallet.balance;
      
      // Allow users to access their own notifications and transactions
      match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId;
      }
      match /transactions/{transactionId} {
        allow read: if request.auth.uid == userId;
        allow write: if false; // Only backend can write
      }
    }

    match /tasks/{taskId} {
      allow read;
      allow create: if request.auth != null;
      // Only owner can update/delete, and only if task is open
      allow update, delete: if request.auth.uid == resource.data.postedById && resource.data.status == 'open';

      // Allow authenticated users to make offers/ask questions
       match /{subcollection}/{docId} {
        allow read, write: if request.auth != null;
      }
    }
    
    match /conversations/{conversationId} {
        // Allow a user to list conversations they are part of, and read/write to them.
        allow list: if request.auth.uid in resource.data.participants;
        allow read, write: if request.auth.uid in resource.data.participants;
    }

    // Admin-related collections should not be client-writable
    match /{collection}/{id} 
      where collection in ['deposits', 'withdrawals', 'platform_transactions', 'paymentGateways', 'settings', 'reviews'] {
        allow read, write: if false;
    }
  }
}
