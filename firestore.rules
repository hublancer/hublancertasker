rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow anyone to read user profiles, tasks, and reviews
    // This is necessary for browsing the site before logging in
    match /users/{userId} {
      allow read: if true;
      allow update: if request.auth.uid == userId && 
                       request.resource.data.keys().hasOnly(['lastMessageReadTimestamp', 'photoURL', 'name']);
    }
    match /tasks/{taskId} {
      allow read: if true;
    }
    match /reviews/{reviewId} {
      allow read: if true;
    }

    // Allow authenticated users to create tasks
    match /tasks/{taskId} {
      allow create: if request.auth != null && request.resource.data.postedById == request.auth.uid;
      // Allow only the task owner to cancel (delete) a task
      allow delete: if resource.data.postedById == request.auth.uid;
    }
    
    // Allow authenticated users to make offers and ask questions
    match /tasks/{taskId}/{collection}/{docId} {
       allow create: if request.auth != null;
       allow delete, update: if request.auth != null && resource.data.taskerId == request.auth.uid; // for editing/cancelling offers
    }
    
    // Allow an authenticated user to read/write to their own subcollections
    match /users/{userId}/{collection}/{docId} {
        allow read, write: if request.auth.uid == userId;
    }
    
    // Allow read access to conversations for participants
    match /conversations/{conversationId} {
      allow read: if request.auth.uid in resource.data.participants;
    }
    match /conversations/{conversationId}/messages/{messageId} {
      allow read, create: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[0] == request.auth.uid ||
                           get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[1] == request.auth.uid;
    }

    // Allow anyone to read settings
    match /settings/platform {
        allow read: if true;
    }

    // Allow admin reads for deposits and withdrawals from the client
    // This is required for the admin pages to function
    match /deposits/{depositId} {
      allow read, write: if request.auth != null;
    }
    match /withdrawals/{withdrawalId} {
      allow read, write: if request.auth != null;
    }
    match /paymentGateways/{gatewayId} {
      allow read: if true;
      allow write: if request.auth != null; // Simplistic rule for admin
    }
  }
}
