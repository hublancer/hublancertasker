rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow public read on users, tasks, settings, gateways
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId; // Users can update their own profile
    }
    match /tasks/{taskId} {
      allow read: if true;
      allow create: if request.auth != null; // Any signed-in user can create a task
      allow update, delete: if request.auth.uid == resource.data.postedById || isAdmin(); // Owner or admin can modify
    }
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can write settings
    }
    match /paymentGateways/{gatewayId} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can manage gateways
    }
    
    // Subcollections
    match /tasks/{taskId}/offers/{offerId} {
       allow read: if true;
       allow create: if request.auth != null; // Any signed in user can make an offer
       allow update, delete: if request.auth.uid == request.resource.data.taskerId; // Tasker can update/delete their own offer
    }

    match /tasks/{taskId}/questions/{questionId} {
        allow read, create: if request.auth != null;
    }

    match /users/{userId}/transactions/{transactionId} {
        allow read: if request.auth.uid == userId || isAdmin();
        // Writes are handled by server actions
        allow write: if false; 
    }

    match /users/{userId}/notifications/{notificationId} {
        allow read, update: if request.auth.uid == userId;
        // Writes are handled by server actions
        allow write: if false; 
    }

    // Conversations
    match /conversations/{conversationId} {
        allow read, write: if request.auth.uid in resource.data.participants;
    }
     match /conversations/{conversationId}/messages/{messageId} {
        allow read, write: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
    }
    
    // Reviews
    match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null;
    }

    // Deposits and Withdrawals (Admin access)
    match /deposits/{depositId} {
        allow read, write: if isAdmin();
        allow create: if request.auth != null;
    }
     match /withdrawals/{withdrawalId} {
        allow read, write: if isAdmin();
        allow create: if request.auth != null;
    }
    match /platform_transactions/{transactionId} {
        allow read, write: if isAdmin();
    }
  }
}
