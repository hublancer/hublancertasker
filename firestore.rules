rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Default Deny: Lock down all access by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Admins: Unrestricted access to everything
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Users Collection: Users can read their own profile, anyone can read public profiles.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId;
    }

    // Tasks Collection: Authenticated users can read. Users can only create/update their own tasks.
    match /tasks/{taskId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.postedById;
      allow update, delete: if request.auth.uid == resource.data.postedById;
    }

    // Offers, Questions, Reviews Subcollections
    match /tasks/{taskId}/{collection}/{docId} {
       allow read: if request.auth != null;
       allow create: if request.auth != null;
       allow update, delete: if request.auth.uid == resource.data.taskerId || request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.postedById;
    }
    
    // Notifications Subcollection: Users can only access their own notifications
    match /users/{userId}/notifications/{notificationId} {
      allow read, update, delete: if request.auth.uid == userId;
    }

    // Conversations Collection: Participants can read/write to their own conversations.
    match /conversations/{conversationId} {
      allow read, update: if request.auth.uid in resource.data.participants;
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
    
    // Deposits & Withdrawals: Users can create their own requests and read only their own.
    match /deposits/{depositId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth.uid == resource.data.userId;
    }
    
    match /withdrawals/{withdrawalId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth.uid == resource.data.userId;
    }
  }
}
