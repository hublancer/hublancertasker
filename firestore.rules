rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isParticipant(conversationId) {
      return request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
    }

    // USERS collection
    match /users/{userId} {
      allow read, update, delete: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn();
    }
    
    // TASKS collection
    match /tasks/{taskId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && isOwner(resource.data.postedById);
      
      // OFFERS subcollection
      match /offers/{offerId} {
        allow read: if true;
        allow create: if isSignedIn();
        // Only the offer creator can modify/delete it
        allow update, delete: if isSignedIn() && isOwner(resource.data.taskerId);
      }
      
      // QUESTIONS subcollection
      match /questions/{questionId} {
         allow read: if true;
         allow create: if isSignedIn();
         allow update: if isSignedIn() && (isOwner(resource.data.userId) || isOwner(get(/databases/$(database)/documents/tasks/$(taskId)).data.postedById));
         allow delete: if isSignedIn() && isOwner(resource.data.userId);
      }
    }
    
    // CONVERSATIONS collection
    match /conversations/{conversationId} {
      allow read, update, delete: if isSignedIn() && isParticipant(conversationId);
      allow create: if isSignedIn();

      // MESSAGES subcollection
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && isParticipant(conversationId);
        allow update, delete: if isSignedIn() && isOwner(resource.data.senderId);
      }
    }
  }
}
    