rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write to their own user document.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;

      // Users can read and update their own notifications.
      // Any authenticated user can create notifications for another user.
      match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == userId;
        allow create: if request.auth != null;
      }
      
      // Users can read and write their own transactions
      match /transactions/{transactionId} {
         allow read, write: if request.auth.uid == userId;
      }
    }

    // Tasks are public to read for all users
    match /tasks/{taskId} {
      allow read: if true;
      // Only authenticated users can create tasks
      allow create: if request.auth != null;
      // Only the owner of the task can update or delete it
      allow update, delete: if request.auth.uid == resource.data.postedById;
      
      // Any authenticated user can create an offer (make an offer)
      match /offers/{offerId} {
        allow create: if request.auth != null;
        // Only the user who made the offer can delete/update it
        allow delete, update: if request.auth.uid == resource.data.taskerId;
      }

       // Any authenticated user can create a question
      match /questions/{questionId} {
        allow create: if request.auth != null;
        allow update: if request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.postedById;
      }
    }
    
    // Only participants can read/write to a conversation and its messages
    match /conversations/{conversationId} {
       allow read, create: if request.auth.uid in resource.data.participants;
       allow update: if request.auth.uid in resource.data.participants;
       
       match /messages/{messageId} {
          allow read, create: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
       }
    }
    
    // Any authenticated user can create a review.
    match /reviews/{reviewId} {
      allow create: if request.auth != null;
      allow read: if true;
    }

  }
}
